{"ast":null,"code":"var _jsxFileName = \"/Users/stephanieparra/Desktop/Skillcrush/react-hotel-filter/src/Filters/Filter.js\";\nimport React from \"react\";\nimport { hotels } from \"../data.js\";\nconst getMatchCount = filterKey => hotels.filter(hotel => hotel[filterKey]).length;\nconst Filter = props => {\n  /* it is not enough to just call props.toggleFilter when the input \n  is clicked, we need to call props.toggleFilter with an argument \n  that indicates WHICH input has been clicked, so we create this\n  onChange function here for each Filter component that is rendered */\n  const onChange = () => props.toggleFilter(props.filter.key);\n  const matchCount = getMatchCount(props.filter.key);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: props.isChecked,\n    onChange: onChange,\n    className: \"filter__checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), props.filter.display), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"filter__match-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, matchCount));\n};\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","hotels","getMatchCount","filterKey","filter","hotel","length","Filter","props","onChange","toggleFilter","key","matchCount","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","isChecked","display","_c","$RefreshReg$"],"sources":["/Users/stephanieparra/Desktop/Skillcrush/react-hotel-filter/src/Filters/Filter.js"],"sourcesContent":["import React from \"react\";\nimport { hotels } from \"../data.js\";\n\nconst getMatchCount = (filterKey) =>\n  hotels.filter((hotel) => hotel[filterKey]).length;\n\nconst Filter = (props) => {\n  /* it is not enough to just call props.toggleFilter when the input \n  is clicked, we need to call props.toggleFilter with an argument \n  that indicates WHICH input has been clicked, so we create this\n  onChange function here for each Filter component that is rendered */\n  const onChange = () => props.toggleFilter(props.filter.key);\n  const matchCount = getMatchCount(props.filter.key);\n  return (\n    <li className=\"filter\">\n      <span>\n        <input\n          type=\"checkbox\"\n          checked={props.isChecked}\n          onChange={onChange}\n          className=\"filter__checkbox\"\n        />\n        {props.filter.display}\n      </span>\n      <span className=\"filter__match-count\">{matchCount}</span>\n    </li>\n  );\n};\n\nexport default Filter;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,YAAY;AAEnC,MAAMC,aAAa,GAAIC,SAAS,IAC9BF,MAAM,CAACG,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACF,SAAS,CAAC,CAAC,CAACG,MAAM;AAEnD,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB;AACF;AACA;AACA;EACE,MAAMC,QAAQ,GAAGA,CAAA,KAAMD,KAAK,CAACE,YAAY,CAACF,KAAK,CAACJ,MAAM,CAACO,GAAG,CAAC;EAC3D,MAAMC,UAAU,GAAGV,aAAa,CAACM,KAAK,CAACJ,MAAM,CAACO,GAAG,CAAC;EAClD,oBACEX,KAAA,CAAAa,aAAA;IAAIC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBpB,KAAA,CAAAa,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpB,KAAA,CAAAa,aAAA;IACEQ,IAAI,EAAC,UAAU;IACfC,OAAO,EAAEd,KAAK,CAACe,SAAU;IACzBd,QAAQ,EAAEA,QAAS;IACnBK,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CAAC,EACDZ,KAAK,CAACJ,MAAM,CAACoB,OACV,CAAC,eACPxB,KAAA,CAAAa,aAAA;IAAMC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAER,UAAiB,CACtD,CAAC;AAET,CAAC;AAACa,EAAA,GArBIlB,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}